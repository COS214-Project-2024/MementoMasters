
using namespace std;

#ifndef COMMERCIALBUILDING_H
#define COMMERCIALBUILDING_H

#include "Building.h"

/**
 * @class CommercialBuilding
 * @brief Defines a commercial building
 * 
 * This class is a concrete product of the Factory Method design pattern.
 */
class CommercialBuilding: public Building
{
private: 
    double revenue; ///< Revenue generated by the building.
    double resourceComsumption; ///< Resource consumption of the building.

public: 
    /**
     * @brief Constructor
     * @param cost The cost of the commercial building
     * @param rev The revenue generated by the commercial building
     * @param resConsumption The resource consumption of the commercial building
     */
    CommercialBuilding(int cost, double rev = 0.0, double resConsumption = 0.0) : Building(cost, "Industrial"), revenue(rev), resourceComsumption(resConsumption) {}

    /**
     * @brief Calculates the revenue generated by the building.
     */
    void calculateRevenue();

    /**
     * @brief Consumes resources for the building.
     */
    virtual ~CommercialBuilding() = default;
};

#endif //COMMERCIALBUILDING_H
